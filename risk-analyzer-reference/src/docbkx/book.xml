<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
	xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:db="http://docbook.org/ns/docbook">

	<bookinfo>
		<title>Application Platform for Professionals</title>
		<subtitle>Customisation Manager Tutorial</subtitle>
		<releaseinfo>0.0.1-SNAPSHOT</releaseinfo>


		<authorgroup>
			<author>
				<firstname>Daniel</firstname>
				<surname>Pacak</surname>
			</author>
		</authorgroup>
	</bookinfo>

	<chapter>
		<title>Introduction</title>
		<para>
			This is my paragref
			<classname>MyClass</classname>
			java class
		</para>

		<itemizedlist>
			<listitem>
				<para>
					<emphasis>Clear separation of roles</emphasis>
					. Each role —
					controller, validator, command object, form object,
					model object,
					<classname>DispatcherServlet</classname>
					, handler mapping, view
					resolver, and so on — can be fulfilled by a
					specialized
					object.
				</para>
			</listitem>

			<listitem>
				<para>
					<emphasis>Powerful and straightforward configuration of both
						framework and application classes as JavaBeans
					</emphasis>
					. This
					configuration capability includes easy referencing across
					contexts,
					such as from web controllers to business objects and
					validators.
				</para>
			</listitem>
		</itemizedlist>
		<para>
			jakis napis pod lista
			<xref linkend="chapter-two" />
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata align="" fileref="media/les-verbes.png"
						format="PNG" width="400"></imagedata>
				</imageobject>
				<caption>
					<para>The request processing workflow in Spring Web MVC (high
						level)
					</para>
				</caption>
			</mediaobject>
		</para>

		<programlisting language="xml" linenumbering="numbered">&lt;web-app&gt;

			&lt;servlet&gt;
			&lt;servlet-name&gt;example&lt;/servlet-name&gt;
			&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
			&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
			&lt;/servlet&gt;

			&lt;servlet-mapping&gt;
			&lt;servlet-name&gt;example&lt;/servlet-name&gt;
			&lt;url-pattern&gt;/example/*&lt;/url-pattern&gt;
			&lt;/servlet-mapping&gt;

			&lt;/web-app&gt;</programlisting>

	</chapter>

	<chapter id="chapter-two">
		<title>Drugi rozdzial</title>
		<para>chcialby tutaj cos napisac, ale sie wstydze</para>

		<tip>
			<para>
				Available in the a number of web applications leverage the
				annotation
				support described in this section including
				<emphasis>MvcShowcase</emphasis>
				,
				<emphasis>MvcAjax</emphasis>
				,
				<emphasis>MvcBasic</emphasis>
				,
				<emphasis>PetClinic</emphasis>
				,
				<emphasis>PetCare</emphasis>
				, and others.
			</para>

			<!-- MLP Note removed reference to imagedb -->
		</tip>

		<!--You need an intro sentence here that indicates the *purpose* of the 
			following code. -->

		<programlisting language="java">
		<[]
			@Controller
			public class HelloWorldController {

			@RequestMapping("/helloWorld")
			public String helloWorld(Model model) {
			model.addAttribute("message",
			"Hello World!");
			return "helloWorld";
			}
			}
		</programlisting>


		<variablelist>
			<varlistentry>
				<term>
					<literal>interceptors</literal>
				</term>

				<listitem>
					<para>
						List of interceptors to use.
						<interfacename>HandlerInterceptor</interfacename>
						s are discussed in
						<xref linkend="mvc-handlermapping-interceptor" />
						.
					</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>
					<literal>defaultHandler</literal>
				</term>

				<listitem>
					<para>Default handler to use, when this handler mapping does not
						result in a matching handler.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>

	</chapter>

	<!-- <xi:include href="included_section.xml" /> -->
	<!-- </chapter> -->
</book>
